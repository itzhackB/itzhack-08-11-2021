{"version":3,"sources":["Redux/actions/types.js","Redux/actions/weatherActions.js","Components/Features/Card/DayCardComponent.jsx","Redux/actions/favoritesAction.js","Components/Features/Loader/LoaderComponent.jsx","Components/Features/WeekContainer/WeekContainer.jsx","Components/Features/Autocomplete/AutocompleteComponent.jsx","Components/Pages/Home/HomeComponent.jsx","Components/Pages/Favorites/FavoritesComponent.jsx","utils/environment.js","Routing/Routing.jsx","Components/Features/Header/HeaderComponent.jsx","Redux/reducers/weatherRedcuer.js","Redux/reducers/locationReducer.js","Redux/reducers/favoritesReducer.js","Redux/reducers/errorReducer.js","Redux/reducers/isLoadingReducer.js","Redux/reducers/index.js","Redux/store.js","App.js","utils/favoriteLocalStorage.js","reportWebVitals.js","index.js"],"names":["GET_CURRENT_CITY","CURRENT_CITY_WEEK_WEATHER","SET_LOCATION","ADD_FAVORITE","DELETE_FAVORITE","ADD_ERROR","DELETE_ERROR","API_KEY","GetdeafultCity","city","dispatch","a","axios","get","response","type","payload","data","LocalizedName","cityKey","Key","getLocationWeather","currentWeather","getWeekCurrentWeather","DailyForecasts","moment","require","DayCardComponent","day","useSelector","state","weather","current","newDate","Date","weekday","setTime","isDayTime","IsDayTime","className","Icon","format","Math","round","Temperature","Minimum","Value","IconPhrase","deleteFavorite","id","LoaderComponent","class","WeekContainer","useDispatch","weekWeather","weekly","currentLocation","location","favorites","Metric","WeatherText","some","e","Button","style","marginBottom","variant","onClick","name","map","index","AutocompleteComponent","useState","suggestions","setSuggestions","erros","setError","serachCity","value","target","test","fetch","then","res","json","Alert","severity","Autocomplete","size","color","sx","width","options","option","onChange","renderInput","params","TextField","label","key","background","HomeComponent","useEffect","FavoritesComponent","favoriteList","setFavoriteList","tempFavoriteList","fetchFavorites","CURRENT_URL","fav","favorite","development","process","env","NODE_ENV","isDev","Routing","path","exact","component","HeaderComponent","to","icon","faBell","fontSize","length","weatherRedcuer","action","locationReducer","favoritesReducer","filter","Favoriteitem","errorReducer","isLoadingReducer","combineReducers","errors","isLoading","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","navigator","geolocation","getCurrentPosition","lat","coords","latitude","lon","longitude","err","favoriteLocalStorage","JSON","stringify","localStorage","setItem","saveFavorites","getState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e16763c4.chunk.js","sourcesContent":["export const GET_CURRENT_CITY=\"GET_CURRENT_CITY\"\r\nexport const CURRENT_CITY_WEEK_WEATHER=\"CURRENT_CITY_WEEK_WEATHER\"\r\nexport const SET_LOCATION=\"SET_LOCATION\"\r\nexport const ADD_FAVORITE=\"ADD_FAVORITE\"\r\nexport const DELETE_FAVORITE=\"DELETE_FAVORITE\"\r\nexport const ADD_ERROR=\"ADD_ERROR\"\r\nexport const DELETE_ERROR=\"DELETE_ERROR\"\r\nexport const SET_LOADING= \"SET_LOADING\"","import { SET_LOCATION, GET_CURRENT_CITY, CURRENT_CITY_WEEK_WEATHER, SET_LOADING } from \"./types\";\r\nimport axios from \"axios\";\r\n\r\nconst API_KEY = 'wOoT0blOADflg09p2sBk1Z28WuUnFalS'\r\nconst autoComplelteURL = 'http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey='\r\nconst weeklyWeatherURL = \"http://dataservice.accuweather.com/forecasts/v1/daily/5day/\"\r\nconst currentURL = 'http://dataservice.accuweather.com/currentconditions/v1/'\r\nconst geoURL = 'http://dataservice.accuweather.com/locations/v1/cities/geoposition/search?'\r\n\r\nexport const GetdeafultCity = (city) => async dispatch => {\r\n    const response = await axios.get(`${autoComplelteURL}${API_KEY}&q=${city}`)\r\n    await dispatch({ type: SET_LOCATION, payload: { city: response?.data[0].LocalizedName, cityKey: response.data[0].Key } })\r\n    let cityKey = response.data[0].Key;\r\n    await dispatch(getLocationWeather(cityKey))\r\n}\r\n\r\nexport const getCityByGeo = (lat, lon) => async dispatch => {\r\n    const response = await axios.get(`${geoURL}apikey=${API_KEY}&q=${lat},${lon}`)\r\n    await dispatch({ type: SET_LOCATION, payload: { city: response.data.LocalizedName, cityKey: response.data.Key } })\r\n    let cityKey = response.data.Key\r\n    await dispatch(getLocationWeather(cityKey))\r\n\r\n}\r\n\r\nexport const getLocationWeather = cityKey => async dispatch => {\r\n    await dispatch(currentWeather(cityKey))\r\n    await dispatch(getWeekCurrentWeather(cityKey))\r\n    await dispatch({type: SET_LOADING})\r\n}\r\n\r\nexport const currentWeather = cityKey => async dispatch => {\r\n    const response = await axios.get(`${currentURL}${cityKey}?apikey=${API_KEY}`)\r\n    await dispatch({ type: GET_CURRENT_CITY, payload: response.data[0] })\r\n\r\n}\r\n\r\n\r\nexport const getWeekCurrentWeather = cityKey => async dispatch => {\r\n    const response = await axios.get(`${weeklyWeatherURL}${cityKey}?apikey=${API_KEY}`)\r\n    await dispatch({ type: CURRENT_CITY_WEEK_WEATHER, payload: response.data.DailyForecasts })\r\n\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nvar moment = require('moment');\r\n\r\nconst DayCardComponent = ({ day }) => {\r\n    const currentWeather = useSelector((state) => state.weather.current)\r\n\r\n    let newDate = new Date();\r\n    const weekday = day.Date * 1000\r\n    newDate.setTime(weekday)\r\n\r\n    const isDayTime = currentWeather.IsDayTime ? 'Day' : 'Night'\r\n    return (\r\n        \r\n            <div className=\"col-sm-2\">\r\n                <div className=\"card\">\r\n                    <p className=\"card-title\"><i className={`wi icon-accu${day[isDayTime].Icon}`}></i></p>\r\n                    <p className=\"text-muted\">{moment(day.Date).format('ddd')}</p>\r\n                    <h2>{Math.round(day.Temperature.Minimum.Value)} °F</h2>\r\n                    <div className=\"card-body\">\r\n                        <p className=\"card-text\">{day[isDayTime].IconPhrase}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default DayCardComponent\r\n","import { ADD_FAVORITE, DELETE_FAVORITE } from \"./types\"\r\n\r\nexport const addFavorite = (id, name) => {\r\n    return {\r\n        type: ADD_FAVORITE,\r\n        payload: {\r\n            id: id,\r\n            name: name\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteFavorite = id => {\r\n    return {\r\n        type: DELETE_FAVORITE,\r\n        payload: id\r\n    }\r\n}","import React from 'react'\r\nimport './Loader.css'\r\n\r\nconst LoaderComponent = () => {\r\n    return (\r\n        <div class=\"wrapper\">\r\n            <div class=\"sun\"></div>\r\n            <div class=\"cloud\">\r\n                <div class=\"cloud1\">\r\n                    <ul>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"cloud1 c_shadow\">\r\n                    <ul>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"cloud_s\">\r\n                <div class=\"cloud1\">\r\n                    <ul>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"cloud1 c_shadow\">\r\n                    <ul>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"cloud_vs\">\r\n                <div class=\"cloud1\">\r\n                    <ul>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"cloud1 c_shadow\">\r\n                    <ul>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div class=\"haze\"></div>\r\n            <div class=\"haze_stripe\"></div>\r\n            <div class=\"haze_stripe\"></div>\r\n            <div class=\"haze_stripe\"></div>\r\n            <div class=\"thunder\"></div>\r\n            <div class=\"rain\">\r\n                <ul>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                </ul>\r\n            </div>\r\n            <div class=\"sleet\">\r\n                <ul>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                </ul>\r\n            </div>\r\n            <div class=\"text\">\r\n                <ul>\r\n                    <li>Mostly Sunny</li>\r\n                    <li>Partly Sunny</li>\r\n                    <li>Partly Cloudy</li>\r\n                    <li>Mostly Cloudy</li>\r\n                    <li>Cloudy</li>\r\n                    <li>Hazy</li>\r\n                    <li>Thunderstorm</li>\r\n                    <li>Rain</li>\r\n                    <li>Sleet</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoaderComponent\r\n","import React from 'react'\r\nimport DayCardComponent from '../Card/DayCardComponent'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { addFavorite, deleteFavorite } from '../../../Redux/actions/favoritesAction';\r\nimport Button from '@mui/material/Button';\r\nimport LoaderComponent from '../Loader/LoaderComponent';\r\n\r\nconst WeekContainer = () => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const weekWeather = useSelector((state) => state.weather.weekly)\r\n    const currentLocation = useSelector((state) => state.location)\r\n    const currentWeather = useSelector((state) => state.weather.current)\r\n    const favorites = useSelector((state) => state.favorites)\r\n\r\n\r\n    const checkIfFavorite = () => {\r\n        if (favorites.some(e => e.id === currentLocation.cityKey)) {\r\n            return true\r\n        }\r\n        else {\r\n            return false\r\n        }\r\n    }\r\n    return (\r\n\r\n        <>\r\n            {\r\n                currentWeather ?\r\n                    <div className=\"container\">\r\n\r\n                        <h1 className=\"mainCard\">{currentWeather?.Temperature?.Metric?.Value} °F</h1>\r\n                        <h2 className=\"mainCard\">{currentLocation.city}</h2>\r\n                        <h3 className=\"mainCard\">{currentWeather.WeatherText}</h3>\r\n\r\n                        {checkIfFavorite() ? <Button style={{ marginBottom: '2%' }} variant=\"contained\" onClick={() => dispatch(deleteFavorite(currentLocation.cityKey))}>Unsubscribe</Button>\r\n                            : <Button style={{ marginBottom: '2%' }} variant=\"contained\" onClick={() => dispatch(addFavorite(currentLocation.cityKey, currentLocation.city))}>Subscribe</Button>\r\n                        }\r\n                        <div className=\"daysForecastWrapper\">\r\n                            <h1 className=\"daysForecast\">5-Day Forecast.</h1>\r\n                        </div>\r\n\r\n                        <div className=\"cardsWrapper\">\r\n\r\n                            {weekWeather.map((day, index) => {\r\n                                return <DayCardComponent day={day} index={index} key={day.id} />\r\n                            })}\r\n\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <LoaderComponent/>\r\n        }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WeekContainer\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { GetdeafultCity } from '../../../Redux/actions/weatherActions';\r\nimport Alert from '@mui/material/Alert';\r\n\r\n\r\n\r\nconst AutocompleteComponent = (e) => {\r\n    const dispatch = useDispatch()\r\n    const autoCompleteURL = 'http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey='\r\n    const api_key = 'wOoT0blOADflg09p2sBk1Z28WuUnFalS'\r\n    const [suggestions, setSuggestions] = useState([])\r\n    const [erros, setError] = useState(true)\r\n\r\n    const serachCity = (e) => {\r\n        let value = e.target.value\r\n        let english = /[^A-Za-z]/ig\r\n\r\n        if (!english.test(value)) {\r\n            setError(true)\r\n            fetch(`${autoCompleteURL}${api_key}&q=${value}`)\r\n                .then((res) => res.json())\r\n                .then((response) => setSuggestions(response))\r\n\r\n        }\r\n        else {\r\n            setError(false)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"autoComplete\">\r\n            {erros ? \"\" : <Alert severity=\"error\">English letters only.</Alert>}\r\n\r\n            <Autocomplete\r\n                id=\"free-solo-demo\"\r\n                size=\"medium\"\r\n                color='white'\r\n                sx={{ width: 500 }}\r\n                options={suggestions?.map((option) => option.LocalizedName)}\r\n                onChange={(e, value) => dispatch(GetdeafultCity(value))}\r\n                renderInput={(params) =>\r\n                    <TextField onChange={serachCity} {...params} label=\"Search city\" key={params.Key} style={{background:'white'}}/>}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AutocompleteComponent\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { GetdeafultCity } from '../../../Redux/actions/weatherActions';\r\nimport WeekContainer from '../../Features/WeekContainer/WeekContainer';\r\nimport AutocompleteComponent from '../../Features/Autocomplete/AutocompleteComponent';\r\n\r\n\r\n\r\nconst HomeComponent = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(() => {\r\n        dispatch(GetdeafultCity('Tel aviv'))\r\n    }, [dispatch])\r\n\r\n \r\n    return (\r\n        <div style={{ background: 'linear-gradient(45deg,#469FFF,#A39AF9)'}}>\r\n            <AutocompleteComponent/>\r\n            <WeekContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeComponent\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { deleteFavorite } from '../../../Redux/actions/favoritesAction'\r\nimport axios from 'axios'\r\n\r\n\r\nconst FavoritesComponent = () => {\r\n    const dispatch = useDispatch()\r\n    const favorites = useSelector((state) => state.favorites)\r\n    const [favoriteList, setFavoriteList] = useState([])\r\n\r\n    let tempFavoriteList = []\r\n    \r\n    const fetchFavorites = async () => {\r\n        const CURRENT_URL = 'http://dataservice.accuweather.com/currentconditions/v1/'\r\n        const API_KEY = 'wOoT0blOADflg09p2sBk1Z28WuUnFalS'\r\n        for await (const fav of favorites) {\r\n            const data = await axios.get(`${CURRENT_URL}${fav.id}?apikey=${API_KEY}`)\r\n            tempFavoriteList[fav.id] = data.data[0]\r\n        }\r\n        setFavoriteList(tempFavoriteList)\r\n    }\r\n    useEffect(() => {\r\n        fetchFavorites()\r\n    }, [fetchFavorites()])\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Favorites</h1>\r\n            <div className=\"favoritesContainer\">\r\n                {favorites.map((favorite, index) =>\r\n                    <div\r\n                        className=\"favoritesItem\"\r\n                        key={index}>\r\n                        <p>{favorite.name}</p>\r\n                        <p>{favoriteList[favorite.id]?.WeatherText}</p>\r\n                        <p>{favoriteList[favorite.id]?.Temperature.Metric.Value}</p>\r\n                        <button\r\n                            onClick={() => dispatch(deleteFavorite(favorite.id))}>\r\n                            Remove Favorite\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavoritesComponent\r\n","import process from \"process\";\r\n\r\nconst development = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\r\n\r\nexport default function isDev()\r\n{\r\n    return development;\r\n}","import React from 'react'\r\nimport {\r\n    Route,\r\n    Switch\r\n} from \"react-router-dom\";\r\nimport HomeComponent from '../Components/Pages/Home/HomeComponent';\r\nimport FavoritesComponent from '../Components/Pages/Favorites/FavoritesComponent';\r\nimport isDev from '../utils/environment'\r\n\r\n\r\nconst Routing = () => {\r\n    return (\r\n\r\n        <Switch>\r\n            {isDev() ? <Route path=\"/itzhack-08-11-2021\" exact component={HomeComponent} /> : <Route path=\"https://itzhackb.github.io/itzhack-08-11-2021/#/\" exact component={HomeComponent} />}\r\n            {isDev() ? <Route path=\"/itzhack-08-11-2021/favorites\" component={FavoritesComponent} /> : <Route path=\"https://itzhackb.github.io/itzhack-08-11-2021/#/favorites\" component={FavoritesComponent} />}\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Routing\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBell } from '@fortawesome/free-solid-svg-icons'\r\nimport isDev from '../../../utils/environment'\r\n\r\nconst HeaderComponent = () => {\r\n    const favorites = useSelector((state) => state.favorites)\r\n    return (\r\n        <div className=\"headerContainer\" >\r\n            {isDev() ? <Link to=\"/itzhack-08-11-2021\">\r\n                <h1 className=\"weatherTitle\" style={{color:\"white\"}}>Weather App</h1>\r\n            </Link>\r\n                :\r\n                <Link to=\"https://itzhackb.github.io/itzhack-08-11-2021/#/\">\r\n                    <h1 className=\"weatherTitle\" style={{color:\"white\"}}>Weather App</h1>\r\n                </Link>\r\n            }\r\n            {isDev() ? <Link to=\"/itzhack-08-11-2021/favorites\">\r\n                <FontAwesomeIcon icon={faBell} size={\"2x\"} style={{ color: \"white\" }} />\r\n                <div style={{ color: 'white',fontSize:\"1.5em\" }}>{favorites.length}</div>\r\n            </Link>\r\n                :\r\n                <Link to=\"https://itzhackb.github.io/itzhack-08-11-2021/#/favorites\">\r\n                    <FontAwesomeIcon icon={faBell} size={\"2x\"} style={{ color: \"red\" }} />\r\n                    <div style={{ color: 'red' }}>{favorites.length}</div>\r\n                </Link>\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderComponent\r\n","import { GET_CURRENT_CITY, CURRENT_CITY_WEEK_WEATHER } from \"../actions/types\";\r\n\r\nfunction weatherRedcuer(weather = { current: {}, weekly: [] }, action) {\r\n    switch (action.type) {\r\n        case GET_CURRENT_CITY:\r\n            return {\r\n                ...weather, current: action.payload\r\n            }\r\n        case CURRENT_CITY_WEEK_WEATHER:\r\n            return {\r\n                ...weather, \r\n                weekly: action.payload\r\n            }\r\n        default:\r\n            return weather;\r\n    }\r\n}\r\n\r\nexport default weatherRedcuer;","import { SET_LOCATION } from \"../actions/types\"\r\n\r\nconst locationReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case SET_LOCATION:\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default locationReducer","import { ADD_FAVORITE, DELETE_FAVORITE } from \"../actions/types\";\r\n\r\nconst favoritesReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case ADD_FAVORITE:\r\n            return  [...state, action.payload]\r\n        case DELETE_FAVORITE:\r\n            return state.filter((Favoriteitem) => Favoriteitem.id !== action.payload)\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default favoritesReducer","import React from 'react'\r\nimport { ADD_ERROR, DELETE_ERROR } from '../actions/types';\r\n\r\nconst errorReducer = (state = [], action) => {\r\n    switch (action) {\r\n        case ADD_ERROR:\r\n            return [...state, action.payload]\r\n        case DELETE_ERROR:\r\n            state = []\r\n            return;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default errorReducer\r\n","const isLoadingReducer = (state = true, action) => {\r\n    switch (action.type) {\r\n        case 'SET_LOADING':\r\n            return false\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default isLoadingReducer\r\n","import { combineReducers } from \"redux\";\r\nimport weatherRedcuer from \"./weatherRedcuer\";\r\nimport locationReducer from \"./locationReducer\";\r\nimport favoritesReducer from \"./favoritesReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport isLoadingReducer from \"./isLoadingReducer\";\r\n\r\n\r\nexport default combineReducers({\r\n    weather: weatherRedcuer,\r\n    location: locationReducer,\r\n    favorites: favoritesReducer,\r\n    errors: errorReducer,\r\n    isLoading:isLoadingReducer\r\n})","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from './reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\n\r\nconst store = createStore(rootReducer, initialState, compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n))\r\n\r\nexport default store;","import React, { useEffect } from 'react';\nimport './App.css';\nimport Routing from './Routing/Routing';\nimport HeaderComponent from './Components/Features/Header/HeaderComponent';\nimport { useDispatch, useSelector } from 'react-redux'\nimport store from './Redux/store'\nimport { GetdeafultCity } from '../src/Redux/actions/weatherActions'\nimport { saveFavorites } from '../src/utils/favoriteLocalStorage'\nimport { getCityByGeo } from '../src/Redux/actions/weatherActions'\nimport LoaderComponent from './Components/Features/Loader/LoaderComponent';\n\n\n\nfunction App() {\n  const dispatch = useDispatch()\n  const isLoading = useSelector((state) => state.isLoading)\n  \n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(\n      location => dispatch(getCityByGeo(location.coords.latitude, location.coords.longitude)),\n      err => {\n        dispatch(GetdeafultCity('Tel Aviv'))\n      }\n    )\n    saveFavorites(store.getState.favorites)\n    dispatch(GetdeafultCity('Tel aviv'))\n  }, [dispatch])\n\n  return (\n    <div className=\"App\">\n      {isLoading ? <LoaderComponent /> : \"\"}\n      <HeaderComponent />\n      <Routing />\n    </div>\n  );\n}\n\nexport default App;\n","\r\nexport const loadFavorites = () => {\r\n    \r\n    try {\r\n        const favoriteLocalStorage = localStorage.getItem('favorites')\r\n        if (favoriteLocalStorage === null) {\r\n            return []\r\n        }\r\n        return JSON.parse(favoriteLocalStorage)\r\n    } catch (err) {\r\n        return undefined\r\n    }\r\n}\r\n\r\nexport const saveFavorites = (state) => {\r\n    \r\n    try {\r\n        const favoriteLocalStorage = JSON.stringify(state)\r\n        localStorage.setItem('favorites', favoriteLocalStorage)\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './Redux/store'\nimport { BrowserRouter as Router } from \"react-router-dom\"\n\n\n\n\n\n\nReactDOM.render(\n  < Provider store={store} >\n      <Router>\n        <App />\n      </Router>\n  </Provider >,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}