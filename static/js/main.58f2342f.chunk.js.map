{"version":3,"sources":["Components/Features/Card/DayCardComponent.jsx","utils/tempConverter.js","Redux/actions/types.js","Redux/actions/favoritesAction.js","Components/Features/WeekContainer/WeekContainer.jsx","Redux/actions/weatherActions.js","Components/Features/Autocomplete/AutocompleteComponent.jsx","Components/Features/Dialog/DialogComponent.jsx","Components/Features/GetMyLocation/GetMyLocation.jsx","context/themeContext.jsx","Components/Pages/Home/HomeComponent.jsx","utils/environment.js","Components/Pages/Favorites/FavoritesComponent.jsx","Routing/Routing.jsx","Components/Features/Header/HeaderComponent.jsx","Redux/actions/tempUnitAction.js","Redux/reducers/weatherRedcuer.js","Redux/reducers/locationReducer.js","Redux/reducers/favoritesReducer.js","Redux/reducers/isLoadingReducer.js","Redux/reducers/themeReducer.js","Redux/reducers/tempUnitReducer.js","Redux/reducers/index.js","Redux/store.js","Components/Features/Loader/LoaderComponent.jsx","App.js","utils/favoriteLocalStorage.js","reportWebVitals.js","index.js"],"names":["moment","require","DayCardComponent","fahr","day","index","currentWeather","useSelector","state","weather","current","temp","isDayTime","IsDayTime","className","Date","format","Day","Icon","Math","round","Temperature","Minimum","Value","IconPhrase","GET_CURRENT_CITY","CURRENT_CITY_WEEK_WEATHER","SET_LOCATION","ADD_FAVORITE","DELETE_FAVORITE","SET_THEME","CONVERT_TEMP","deleteFavorite","id","type","payload","WeekContainer","toggle","dispatch","useDispatch","weekWeather","weekly","currentLocation","location","favorites","style","backgroundColor","color","city","WeatherText","Imperial","Metric","some","e","cityKey","variant","onClick","name","map","API_KEY","GetdeafultCity","a","axios","get","response","data","LocalizedName","Key","getLocationWeather","getCityByGeo","lat","lon","getWeekCurrentWeather","DailyForecasts","AutocompleteComponent","heroImage","Photos","LandscapeLink","replace","useState","suggestions","setSuggestions","erros","setError","connectionError","setConnectionError","debounceSearch","useCallback","debounce","value","target","test","fetch","then","res","json","Message","backgroundImage","Tooltip","open","disableFocusListener","disableHoverListener","disableTouchListener","title","Autocomplete","size","sx","width","options","option","onChange","renderInput","params","TextField","label","key","background","error","DialogComponent","isOpen","setIsOpen","dispatchLocation","getCoords","lan","deafultCity","locationPromise","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","coords","err","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","GetMyLocation","setIsOpenDialog","height","fontSize","icon","faMapMarkerAlt","ThemeContext","createContext","ThemeProvider","children","setToggle","Provider","toggleFunction","HomeComponent","useContext","development","process","env","NODE_ENV","isDev","FavoritesComponent","GeoUrl","favoriteList","setFavoriteList","tempFavoriteList","history","useHistory","all","favorite","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","lng","useEffect","fetchFavorites","CURRENT_URL","fav","changeDeafultCity","favoriteCity","push","position","top","length","display","justifyContent","console","log","favoritesGeo","Routing","path","exact","component","HeaderComponent","to","faHeart","faToggleOn","weatherRedcuer","action","locationReducer","favoritesReducer","filter","Favoriteitem","isLoadingReducer","themeReducer","tempUnitReducer","combineReducers","isLoading","theme","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","LoaderComponent","class","App","latitude","longitude","favoriteLocalStorage","JSON","stringify","localStorage","setItem","saveFavorites","getState","Object","keys","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58f2342f.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { tempConverter } from '../../../utils/tempConverter';\r\nimport \"../../../css/weather-icons.min.css\";\r\nimport '../../../css/weather-icons.css'\r\n\r\n\r\n\r\nvar moment = require('moment');\r\n\r\nconst DayCardComponent = ({ day, index }) => {\r\n\r\n    const currentWeather = useSelector((state) => state.weather.current)\r\n    const temp = useSelector((state) => state.temp)\r\n\r\n    const isDayTime = currentWeather.IsDayTime ? 'Day' : 'Night'\r\n    return (\r\n        <>\r\n\r\n            <div key={index} className=\"weather-forecast__item\">\r\n                <p className=\"weather-forecast__day\">{moment(day.Date).format('ddd')}</p>\r\n                <p className=\"weather-forecast__icon\"><i className={`wi icon-accu${day.Day.Icon} `}></i></p>\r\n                <p className=\"weather-forecast__temp\">{temp ? `${Math.round(day.Temperature.Minimum.Value)} °F` : `${tempConverter(Math.round(day.Temperature.Minimum.Value))} °C`}</p>\r\n                <p className=\"weather__forecast__text\">{day[isDayTime].IconPhrase}</p>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DayCardComponent\r\n","export const tempConverter = (fahr) => {\r\n    let cels = Math.round((fahr - 32.0) * (5.0 / 9.0));\r\n    return cels\r\n}","export const GET_CURRENT_CITY=\"GET_CURRENT_CITY\"\r\nexport const CURRENT_CITY_WEEK_WEATHER=\"CURRENT_CITY_WEEK_WEATHER\"\r\nexport const SET_LOCATION=\"SET_LOCATION\"\r\nexport const ADD_FAVORITE=\"ADD_FAVORITE\"\r\nexport const DELETE_FAVORITE=\"DELETE_FAVORITE\"\r\nexport const ADD_ERROR=\"ADD_ERROR\"\r\nexport const DELETE_ERROR=\"DELETE_ERROR\"\r\nexport const SET_LOADING= \"SET_LOADING\"\r\nexport const SET_THEME=\"SET_THEME\"\r\nexport const CONVERT_TEMP=\"CONVERT_TEMP\"\r\nexport const TYPING_ERROR=\"TYPING_ERROR\"\r\nexport const CONNECTION_ERROR=\"CONNECTION_ERROR\"","import { ADD_FAVORITE, DELETE_FAVORITE } from \"./types\"\r\n\r\nexport const addFavorite = (id, name) => {\r\n    return {\r\n        type: ADD_FAVORITE,\r\n        payload: {\r\n            id: id,\r\n            name: name\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteFavorite = id => {\r\n    return {\r\n        type: DELETE_FAVORITE,\r\n        payload: id\r\n    }\r\n}","import React from 'react'\r\nimport DayCardComponent from '../Card/DayCardComponent'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { addFavorite, deleteFavorite } from '../../../Redux/actions/favoritesAction';\r\nimport Button from '@mui/material/Button';\r\n\r\n\r\nconst WeekContainer = ({ toggle }) => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const weekWeather = useSelector((state) => state.weather.weekly)\r\n    const currentLocation = useSelector((state) => state.location)\r\n    const currentWeather = useSelector((state) => state.weather.current)\r\n    const favorites = useSelector((state) => state.favorites)\r\n    const temp = useSelector((state) => state.temp)\r\n\r\n\r\n    const checkIfFavorite = () => {\r\n        if (favorites.some(e => e.id === currentLocation.cityKey)) {\r\n            return true\r\n        }\r\n        else {\r\n            return false\r\n        }\r\n    }\r\n    return (\r\n\r\n        <>\r\n            {\r\n                currentWeather.Temperature ?\r\n                    <div className=\"weather-forecast container\" style={{ backgroundColor: toggle ? \"white\" : \"#000718\", color: toggle ? \"#000718\" : \"white\" }}>\r\n                        <div className=\"weather-current__today\">\r\n                            <h2 className=\"weather-current__title\">{currentLocation.city}</h2>\r\n                            <div className=\"weather-forecast__current\">\r\n                                <p className=\"weather-forecast__day\">Today</p>\r\n                                <p className=\"weather-forecast__text\">{currentWeather.WeatherText}</p>\r\n                                <p className=\"weather-forecast__temp\">{temp ? `${currentWeather?.Temperature?.Imperial?.Value} °F` : `${currentWeather?.Temperature?.Metric?.Value} °C`}</p>\r\n                            </div>\r\n                            {checkIfFavorite() ? <button className=\"weather-current__btn mainCard\" variant=\"contained\" onClick={() => dispatch(deleteFavorite(currentLocation.cityKey))}>Unsubscribe</button>\r\n                                : <button className=\"weather-current__btn mainCard\" variant=\"contained\" onClick={() => dispatch(addFavorite(currentLocation.cityKey, currentLocation.city))}>Subscribe</button>\r\n                            }\r\n                        </div>\r\n                        <div className=\"weather-forecast__list\">\r\n\r\n                            {weekWeather.map((day, index) => {\r\n                                return <DayCardComponent day={day} index={index} />\r\n                            })}\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    :\r\n                    \"\"\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default WeekContainer\r\n","import { SET_LOCATION, GET_CURRENT_CITY, CURRENT_CITY_WEEK_WEATHER, SET_LOADING } from \"./types\";\r\nimport axios from \"axios\";\r\n\r\nconst API_KEY = 'SMWoYBgzohr64Y8FpGTAu6TBnmN8Eg7W'\r\nconst autoComplelteURL = 'https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey='\r\nconst weeklyWeatherURL = \"https://dataservice.accuweather.com/forecasts/v1/daily/5day/\"\r\nconst currentURL = 'https://dataservice.accuweather.com/currentconditions/v1/'\r\nconst geoURL = 'https://dataservice.accuweather.com/locations/v1/cities/geoposition/search?'\r\n\r\nexport const GetdeafultCity = (city) => async dispatch => {\r\n    const response = await axios.get(`${autoComplelteURL}${API_KEY}&q=${city}`)\r\n    await dispatch({ type: SET_LOCATION, payload: { city: response?.data[0].LocalizedName, cityKey: response.data[0].Key } })\r\n    let cityKey = response.data[0].Key;\r\n    await dispatch(getLocationWeather(cityKey))\r\n}\r\n\r\nexport const getCityByGeo = (lat, lon) => async dispatch => {\r\n    const response = await axios.get(`${geoURL}apikey=${API_KEY}&q=${lat},${lon}`)\r\n    await dispatch({ type: SET_LOCATION, payload: { city: response.data.LocalizedName, cityKey: response.data.Key } })\r\n    let cityKey = response.data.Key\r\n    await dispatch(getLocationWeather(cityKey))\r\n\r\n}\r\n\r\nexport const getLocationWeather = cityKey => async dispatch => {\r\n    await dispatch(currentWeather(cityKey))\r\n    await dispatch(getWeekCurrentWeather(cityKey))\r\n    await dispatch({type: SET_LOADING})\r\n}\r\n\r\nexport const currentWeather = cityKey => async dispatch => {\r\n    const response = await axios.get(`${currentURL}${cityKey}?apikey=${API_KEY}&getphotos=true`)\r\n    await dispatch({ type: GET_CURRENT_CITY, payload: response.data[0] })\r\n\r\n}\r\n\r\n\r\nexport const getWeekCurrentWeather = cityKey => async dispatch => {\r\n    const response = await axios.get(`${weeklyWeatherURL}${cityKey}?apikey=${API_KEY}`)\r\n    await dispatch({ type: CURRENT_CITY_WEEK_WEATHER, payload: response.data.DailyForecasts })\r\n\r\n}","import React, { useState, useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { GetdeafultCity } from '../../../Redux/actions/weatherActions';\r\nimport debounce from 'lodash.debounce'\r\nimport { Tooltip } from '@mui/material';\r\n\r\n\r\nconst AutocompleteComponent = ({ toggle }) => {\r\n    const currentWeather = useSelector((state) => state.weather.current)\r\n    const heroImage = `linear-gradient(rgba(83, 213, 245, 0.75),${toggle ? '#fff' : \"rgb(0, 7, 24)\"} ), url(${currentWeather.Photos[0].LandscapeLink.replace(\"_L_L\", \"_L_XXL\")})`\r\n\r\n    const dispatch = useDispatch()\r\n    const autoCompleteURL = 'https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey='\r\n    const api_key = 'SMWoYBgzohr64Y8FpGTAu6TBnmN8Eg7W'\r\n    const [suggestions, setSuggestions] = useState([])\r\n    const [erros, setError] = useState(false)\r\n    const [connectionError, setConnectionError] = useState(false)\r\n\r\n    const serachCity = (e) => {\r\n        let value = e.target.value\r\n        let notEnglish = /[^A-Za-z]/ig\r\n\r\n        if (!notEnglish.test(value)) {\r\n            setError(false)\r\n            fetch(`${autoCompleteURL}${api_key}&q=${value}`)\r\n                .then((res) => res.json())\r\n                .then((response) => {\r\n                    const isError = !!response.Message\r\n                    if (isError) {\r\n                        setConnectionError(true)\r\n                        setSuggestions([])\r\n                    } else {\r\n                        setConnectionError(false)\r\n                        setSuggestions(response)\r\n                    }\r\n                })\r\n        }\r\n        else if (value === \"\") {\r\n            setError(false)\r\n        }\r\n        else {\r\n            setError(true)\r\n        }\r\n\r\n    }\r\n\r\n    const debounceSearch = useCallback(debounce(serachCity, 500\r\n        , []))\r\n\r\n    return (\r\n        <>\r\n        \r\n            <div className=\"autoComplete\" style={{ backgroundImage: heroImage }}>\r\n                <Tooltip\r\n                    open={erros || connectionError}\r\n                    disableFocusListener\r\n                    disableHoverListener\r\n                    disableTouchListener\r\n                    title={erros ? \"English letters only.\" : \"\" || connectionError ? \"API ERROR. Try Later\" : \"\"} >\r\n\r\n                    <Autocomplete\r\n                        id=\"free-solo-demo\"\r\n                        size=\"medium\"\r\n                        color='white'\r\n                        sx={{ width: 500 }}\r\n                        options={suggestions ? suggestions.map((option) => option.LocalizedName) : \"\"}\r\n                        onChange={(e, value) => dispatch(GetdeafultCity(value))}\r\n                        renderInput={(params) =>\r\n                            <TextField\r\n                                onChange={debounceSearch} {...params} label=\"Search city\" key={params.Key} style={{ background: 'white' }}\r\n                                error={erros || connectionError}\r\n                            />}\r\n                    />\r\n                </Tooltip>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AutocompleteComponent\r\n","import React from 'react'\r\nimport { getCityByGeo } from '../../../Redux/actions/weatherActions'\r\nimport { GetdeafultCity } from '../../../Redux/actions/weatherActions'\r\nimport { Dialog } from '@mui/material'\r\nimport { useDispatch } from 'react-redux'\r\nimport { DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material'\r\n\r\n\r\nconst DialogComponent = ({ isOpen, setIsOpen }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const handleApprove = () => {\r\n        setIsOpen(false);\r\n        dispatchLocation();\r\n    }\r\n\r\n    // const dispatchLocation = () => {\r\n    //     const location = getCoords()\r\n    //         .then(dataLocation => {\r\n    //             const city = getCityByGeo(dataLocation.lat, dataLocation.lan)\r\n    //             dispatch(city)\r\n    //         })\r\n    //         .catch(err=>{\r\n    //             dispatch(\"Tel Aviv\")\r\n    //         })\r\n    // }\r\n\r\n    const dispatchLocation = async () => {\r\n        try {\r\n            const location = await getCoords()\r\n            const city = getCityByGeo(location.lat, location.lan)\r\n            dispatch(city)\r\n        } catch (error) {\r\n            const deafultCity = GetdeafultCity(\"Tel Aviv\")\r\n            dispatch(deafultCity)\r\n        }\r\n\r\n    }\r\n\r\n    const getCoords = async () => {\r\n\r\n        const locationPromise = new Promise((resolve, reject) => {\r\n            navigator.geolocation.getCurrentPosition(\r\n                location => resolve(location.coords),\r\n                err => {\r\n                    reject(err)\r\n                    setIsOpen(false)\r\n                }\r\n            )\r\n        })\r\n\r\n        return locationPromise\r\n\r\n    }\r\n    return (\r\n        <Dialog\r\n            open={isOpen}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Confrim get location\"}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    Are you sure you want to get weather by your location?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <button onClick={() => setIsOpen(false)}>Disagree</button>\r\n                <button onClick={handleApprove} autoFocus>\r\n                    Agree\r\n                </button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default DialogComponent\r\n","import React, { useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { getCityByGeo, GetdeafultCity } from '../../../Redux/actions/weatherActions'\r\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport DialogComponent from '../Dialog/DialogComponent'\r\n\r\nconst GetMyLocation = ({ toggle }) => {\r\n\r\n    const [isOpen, setIsOpenDialog] = useState(false)\r\n    return (\r\n        <div className=\"location_logo\">\r\n\r\n            <button onClick={() => setIsOpenDialog(true)}>\r\n                <FontAwesomeIcon style={{ height: \"2em\", fontSize: \"2em\", color: toggle ? \"black\" : \"white\" }} icon={faMapMarkerAlt} />\r\n            </button>\r\n\r\n            <DialogComponent\r\n                isOpen={isOpen}\r\n                setIsOpen={setIsOpenDialog}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GetMyLocation\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nconst ThemeContext = createContext(false);\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n    const [toggle, setToggle] = useState(true);\r\n    const toggleFunction = () => {\r\n        setToggle(!toggle);\r\n    };\r\n    return (\r\n        <ThemeContext.Provider value={{ toggle, toggleFunction }}>\r\n            {children}\r\n        </ThemeContext.Provider>\r\n    );\r\n};\r\nexport { ThemeContext, ThemeProvider };","import React, {useContext} from 'react'\r\nimport WeekContainer from '../../Features/WeekContainer/WeekContainer';\r\nimport AutocompleteComponent from '../../Features/Autocomplete/AutocompleteComponent';\r\nimport GetMyLocation from '../../Features/GetMyLocation/GetMyLocation';\r\nimport { ThemeContext } from '../../../context/themeContext';\r\n\r\n\r\n\r\nconst HomeComponent = () => {\r\n\r\n    const {toggle} = useContext(ThemeContext)\r\n\r\n    return (\r\n        <div className=\"home\"  >\r\n            <AutocompleteComponent toggle={toggle}/>\r\n            <GetMyLocation toggle={toggle}/>\r\n            <WeekContainer toggle={toggle}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeComponent\r\n","import process from \"process\";\r\n\r\nconst development = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\r\n\r\nexport default function isDev()\r\n{\r\n    return development;\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { deleteFavorite } from '../../../Redux/actions/favoritesAction'\r\nimport { GetdeafultCity } from '../../../Redux/actions/weatherActions'\r\nimport isDev from '../../../utils/environment'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { GoogleMap, withScriptjs, withGoogleMap } from 'react-google-maps'\r\n\r\n\r\nconst FavoritesComponent = () => {\r\n\r\n    const GeoUrl = \"http://dataservice.accuweather.com/locations/v1/\"\r\n    const API_KEY = \"SMWoYBgzohr64Y8FpGTAu6TBnmN8Eg7W\"\r\n    const GOOGLE_KEY = 'AIzaSyA7ZkFbQxpWohmt4LzHLpYw2AyuKfwxg-A'\r\n    const dispatch = useDispatch()\r\n    const favorites = useSelector((state) => state.favorites)\r\n    const [favoriteList, setFavoriteList] = useState([])\r\n\r\n    let tempFavoriteList = []\r\n    let history = useHistory()\r\n\r\n    async function favoritesGeo() {\r\n\r\n        const favoriteList = await Promise.all(favorites.map(favorite =>\r\n            axios.get(`${GeoUrl}${favorite.id}?apikey=${API_KEY}`)));\r\n        return favoriteList\r\n    }\r\n\r\n    function Map() {\r\n        return (\r\n            <GoogleMap\r\n                defaultZoom={1}\r\n                defaultCenter={{ lat: 1, lng: 1 }}\r\n            />\r\n        )\r\n    }\r\n\r\n    const WrappedMap = withScriptjs(withGoogleMap(Map))\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchFavorites = async () => {\r\n            const CURRENT_URL = 'https://dataservice.accuweather.com/currentconditions/v1/'\r\n            const API_KEY = 'SMWoYBgzohr64Y8FpGTAu6TBnmN8Eg7W'\r\n            for await (const fav of favorites) {\r\n                const data = await axios.get(`${CURRENT_URL}${fav.id}?apikey=${API_KEY}`)\r\n                tempFavoriteList[fav.id] = data.data[0]\r\n            }\r\n            setFavoriteList(tempFavoriteList)\r\n        }\r\n        fetchFavorites()\r\n    }, [])\r\n\r\n\r\n    const changeDeafultCity = async (favoriteCity) => {\r\n        await dispatch(GetdeafultCity(favoriteCity))\r\n        history.push(isDev ? \"/itzhack-08-11-2021\" : \"https://itzhackb.github.io/itzhack-08-11-2021/#/\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"weather-forecast__list\" style={{ position: \"relative\", top: \"100px\" }}>\r\n                {favorites.length > 0 ? favorites.map((favorite, index) =>\r\n                    <div\r\n                        className=\"weather-forecast__item\"\r\n                        key={index}>\r\n                        <p className=\"weather-forecast__day\">{favorite.name}</p>\r\n                        <p className=\"weather__forecast__text\">{favoriteList[favorite.id]?.WeatherText}</p>\r\n                        <p className=\"weather-forecast__temp\">{favoriteList[favorite.id]?.Temperature.Metric.Value}</p>\r\n                        <button\r\n                            onClick={() => dispatch(deleteFavorite(favorite.id))}>\r\n                            Remove Favorite\r\n                        </button>\r\n                        <button\r\n                            style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                            onClick={() => changeDeafultCity(favorite.name)}>\r\n                            Set Deafult City\r\n                        </button>\r\n                    </div>\r\n                ) : <h1 className=\"favorites_logo\" >No Favorites To Show</h1>}\r\n                <button onClick={() => console.log(favoritesGeo())}>Check</button>\r\n\r\n            </div>\r\n            {/* <div style={{ height: \"50vh\", width: \"50vw\" }}>\r\n                <WrappedMap\r\n                    googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${GOOGLE_KEY}`}\r\n                    loadingElement={<div style={{ height: \"100%\" }} />}\r\n                    containerElement={<div style={{ height: \"100%\" }} />}\r\n                    mapElement={<div style={{ height: \"100%\" }} />}\r\n                />\r\n            </div> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavoritesComponent\r\n","import React from 'react'\r\nimport {\r\n    Route,\r\n    Switch\r\n} from \"react-router-dom\";\r\nimport HomeComponent from '../Components/Pages/Home/HomeComponent';\r\nimport FavoritesComponent from '../Components/Pages/Favorites/FavoritesComponent';\r\nimport isDev from '../utils/environment'\r\n\r\n\r\nconst Routing = () => {\r\n    return (\r\n\r\n        <Switch>\r\n            {isDev() ? <Route path=\"/itzhack-08-11-2021\" exact component={HomeComponent} /> : <Route path=\"https://itzhackb.github.io/itzhack-08-11-2021/#/\" exact component={HomeComponent} />}\r\n            {isDev() ? <Route path=\"/itzhack-08-11-2021/favorites\" component={FavoritesComponent} /> : <Route path=\"https://itzhackb.github.io/itzhack-08-11-2021/#/favorites\" component={FavoritesComponent} />}\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Routing\r\n","import React, { useContext } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'\r\nimport isDev from '../../../utils/environment'\r\nimport { tempUnitAction } from '../../../Redux/actions/tempUnitAction'\r\nimport { ThemeContext } from '../../../context/themeContext'\r\nimport { faToggleOn } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst HeaderComponent = () => {\r\n    const favorites = useSelector((state) => state.favorites)\r\n    const temp = useSelector((state) => state.temp)\r\n    const { toggle, toggleFunction } = useContext(ThemeContext)\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"container\">\r\n                <nav className=\"header-nav\">\r\n\r\n                    {isDev() ? <Link to=\"/itzhack-08-11-2021\">\r\n                        <h1 className=\"header__logo\" style={{ color: toggle ? \"black\" : \"white\" }}>Weather App</h1>\r\n                    </Link>\r\n                        :\r\n                        <Link to=\"https://itzhackb.github.io/itzhack-08-11-2021/#/\">\r\n                            <h1 className=\"header__logo\" style={{ color: toggle ? \"black\" : \"white\" }}>Weather App</h1>\r\n                        </Link>\r\n                    }\r\n\r\n                    <ul className=\"header__list\">\r\n                        <li>\r\n                            {isDev() ? <Link to=\"/itzhack-08-11-2021/favorites\">\r\n                                <FontAwesomeIcon icon={faHeart} style={{ color: toggle ? \"black\" : \"white\", fontSize: '2em' }} />\r\n                                <div className=\"header__favorite-num\">\r\n                                    {favorites.length}</div>\r\n                            </Link>\r\n                                :\r\n                                <Link to=\"https://itzhackb.github.io/itzhack-08-11-2021/#/favorites\">\r\n                                    <FontAwesomeIcon icon={faHeart} style={{ color: toggle ? \"black\" : \"white\", fontSize: '1em' }} />\r\n                                    <div className=\"header__favorite-num\">\r\n                                        {favorites.length}</div>\r\n                                </Link>\r\n                            }\r\n                        </li>\r\n\r\n                        <li>\r\n                            <button\r\n                                onClick={() => dispatch(tempUnitAction())}><div className=\"header__unit-icon\" style={{ color: toggle ? \"black\" : \"white\" }}>{temp ? '\\xB0C' : '\\xB0F'}</div></button>\r\n                        </li>\r\n                        <li>\r\n                            <button onClick={toggleFunction}>\r\n                                <FontAwesomeIcon icon={faToggleOn} style={{ fontSize: \"2em\", color: toggle ? \"black\" : \"white\" }} />\r\n                            </button>\r\n                        </li>\r\n\r\n                    </ul>\r\n\r\n                </nav>\r\n            </div>\r\n        </header>\r\n\r\n    )\r\n}\r\n\r\nexport default HeaderComponent\r\n","import { CONVERT_TEMP } from \"./types\"\r\n\r\nexport const tempUnitAction = () => {\r\n    return {\r\n        type: CONVERT_TEMP\r\n    }\r\n}","import { GET_CURRENT_CITY, CURRENT_CITY_WEEK_WEATHER } from \"../actions/types\";\r\n\r\nfunction weatherRedcuer(weather = { current: {}, weekly: [] }, action) {\r\n    switch (action.type) {\r\n        case GET_CURRENT_CITY:\r\n            return {\r\n                ...weather, current: action.payload\r\n            }\r\n        case CURRENT_CITY_WEEK_WEATHER:\r\n            return {\r\n                ...weather, \r\n                weekly: action.payload\r\n            }\r\n        default:\r\n            return weather;\r\n    }\r\n}\r\n\r\nexport default weatherRedcuer;","import { SET_LOCATION } from \"../actions/types\"\r\n\r\nconst locationReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case SET_LOCATION:\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default locationReducer","import { ADD_FAVORITE, DELETE_FAVORITE } from \"../actions/types\";\r\n\r\nconst favoritesReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case ADD_FAVORITE:\r\n            return  [...state, action.payload]\r\n        case DELETE_FAVORITE:\r\n            return state.filter((Favoriteitem) => Favoriteitem.id !== action.payload)\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default favoritesReducer","const isLoadingReducer = (state = true, action) => {\r\n    switch (action.type) {\r\n        case 'SET_LOADING':\r\n            return false\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default isLoadingReducer\r\n","import { SET_THEME } from \"../actions/types\"\r\n\r\nconst themeReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case SET_THEME:\r\n            return !state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default themeReducer","import { CONVERT_TEMP } from \"../actions/types\"\r\n\r\nconst tempUnitReducer = (state = true, action) => {\r\n    switch (action.type) {\r\n        case CONVERT_TEMP:\r\n            return !state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default tempUnitReducer","import { combineReducers } from \"redux\";\r\nimport weatherRedcuer from \"./weatherRedcuer\";\r\nimport locationReducer from \"./locationReducer\";\r\nimport favoritesReducer from \"./favoritesReducer\";\r\nimport isLoadingReducer from \"./isLoadingReducer\";\r\nimport themeReducer from \"./themeReducer\";\r\nimport tempUnitReducer from \"./tempUnitReducer\";\r\n\r\nexport default combineReducers({\r\n    weather: weatherRedcuer,\r\n    location: locationReducer,\r\n    favorites: favoritesReducer,\r\n    isLoading:isLoadingReducer,\r\n    theme:themeReducer,\r\n    temp:tempUnitReducer\r\n})","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from './reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\n\r\nconst store = createStore(rootReducer, initialState, compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n))\r\n\r\nexport default store;","import React from 'react'\r\nimport './Loader.css'\r\n\r\nconst LoaderComponent = () => {\r\n    return (\r\n        <div class=\"wrapper\">\r\n            <div class=\"sun\"></div>\r\n            <div class=\"cloud\">\r\n                <div class=\"cloud1\">\r\n                    <ul>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"cloud1 c_shadow\">\r\n                    <ul>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"cloud_s\">\r\n                <div class=\"cloud1\">\r\n                    <ul>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"cloud1 c_shadow\">\r\n                    <ul>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"cloud_vs\">\r\n                <div class=\"cloud1\">\r\n                    <ul>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"cloud1 c_shadow\">\r\n                    <ul>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div class=\"haze\"></div>\r\n            <div class=\"haze_stripe\"></div>\r\n            <div class=\"haze_stripe\"></div>\r\n            <div class=\"haze_stripe\"></div>\r\n            <div class=\"thunder\"></div>\r\n            <div class=\"rain\">\r\n                <ul>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                </ul>\r\n            </div>\r\n            <div class=\"sleet\">\r\n                <ul>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                </ul>\r\n            </div>\r\n            <div class=\"text\">\r\n                <ul>\r\n                    <li>Mostly Sunny</li>\r\n                    <li>Partly Sunny</li>\r\n                    <li>Partly Cloudy</li>\r\n                    <li>Mostly Cloudy</li>\r\n                    <li>Cloudy</li>\r\n                    <li>Hazy</li>\r\n                    <li>Thunderstorm</li>\r\n                    <li>Rain</li>\r\n                    <li>Sleet</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoaderComponent\r\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport Routing from './Routing/Routing';\nimport HeaderComponent from './Components/Features/Header/HeaderComponent';\nimport { useDispatch, useSelector } from 'react-redux'\nimport store from './Redux/store'\nimport { GetdeafultCity } from '../src/Redux/actions/weatherActions'\nimport { saveFavorites } from '../src/utils/favoriteLocalStorage'\nimport { getCityByGeo } from '../src/Redux/actions/weatherActions'\nimport LoaderComponent from './Components/Features/Loader/LoaderComponent';\n\n\n\nfunction App() {\n  const dispatch = useDispatch()\n  const isLoading = useSelector((state) => state.isLoading)\n  const theme = useSelector((state) => state.theme)\n  const currentWeather = useSelector((state) => state.weather.current)\n\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(\n      location => dispatch(getCityByGeo(location.coords.latitude, location.coords.longitude)),\n      err => {\n        dispatch(GetdeafultCity('Tel Aviv'))\n      }\n    )\n    saveFavorites(store.getState.favorites)\n  }, [dispatch])\n\n\n  return (\n    <div className={theme ? \"App\" : \"dark\"}>\n      {isLoading ? <LoaderComponent /> : \"\"}\n      {\n        Object.keys(currentWeather).length === 0 ? \"\"\n          :\n          <>\n            <HeaderComponent />\n            <Routing />\n          </>\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n","\r\nexport const loadFavorites = () => {\r\n    \r\n    try {\r\n        const favoriteLocalStorage = localStorage.getItem('favorites')\r\n        if (favoriteLocalStorage === null) {\r\n            return []\r\n        }\r\n        return JSON.parse(favoriteLocalStorage)\r\n    } catch (err) {\r\n        return undefined\r\n    }\r\n}\r\n\r\nexport const saveFavorites = (state) => {\r\n    \r\n    try {\r\n        const favoriteLocalStorage = JSON.stringify(state)\r\n        localStorage.setItem('favorites', favoriteLocalStorage)\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './Redux/store'\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport { ThemeProvider } from './context/themeContext'\n\n\n\n\n\n\nReactDOM.render(\n  < Provider store={store} >\n    <ThemeProvider>\n      <Router>\n        <App />\n      </Router>\n    </ThemeProvider>\n  </Provider >,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}