{"version":3,"sources":["Redux/actions/types.js","Redux/actions/weatherActions.js","Components/Features/Card/DayCardComponent.jsx","utils/tempConverter.js","Redux/actions/favoritesAction.js","Components/Features/WeekContainer/WeekContainer.jsx","Components/Features/Autocomplete/AutocompleteComponent.jsx","Components/Pages/Home/HomeComponent.jsx","Components/Pages/Favorites/FavoritesComponent.jsx","utils/environment.js","Routing/Routing.jsx","Components/Features/Header/HeaderComponent.jsx","Redux/actions/tempUnitAction.js","Redux/reducers/weatherRedcuer.js","Redux/reducers/locationReducer.js","Redux/reducers/favoritesReducer.js","Redux/reducers/isLoadingReducer.js","Redux/reducers/themeReducer.js","Redux/reducers/tempUnitReducer.js","Redux/reducers/index.js","Redux/store.js","Components/Features/Loader/LoaderComponent.jsx","App.js","utils/favoriteLocalStorage.js","reportWebVitals.js","index.js"],"names":["GET_CURRENT_CITY","CURRENT_CITY_WEEK_WEATHER","SET_LOCATION","ADD_FAVORITE","DELETE_FAVORITE","SET_THEME","CONVERT_TEMP","API_KEY","GetdeafultCity","city","dispatch","a","axios","get","response","type","payload","data","LocalizedName","cityKey","Key","getLocationWeather","currentWeather","getWeekCurrentWeather","DailyForecasts","moment","require","DayCardComponent","fahr","day","index","useSelector","state","weather","current","temp","isDayTime","IsDayTime","className","Date","format","Day","Icon","Math","round","Temperature","Minimum","Value","IconPhrase","deleteFavorite","id","WeekContainer","useDispatch","weekWeather","weekly","currentLocation","location","favorites","WeatherText","Imperial","Metric","some","e","variant","onClick","name","map","AutocompleteComponent","heroImage","Photos","LandscapeLink","replace","useState","suggestions","setSuggestions","erros","setError","connectionError","setConnectionError","debounceSearch","useCallback","debounce","value","target","test","fetch","then","res","json","Message","style","backgroundImage","Alert","severity","Autocomplete","size","color","sx","width","options","option","onChange","renderInput","params","TextField","label","key","background","HomeComponent","useEffect","FavoritesComponent","favoriteList","setFavoriteList","tempFavoriteList","fetchFavorites","CURRENT_URL","fav","favorite","development","process","env","NODE_ENV","isDev","Routing","path","exact","component","HeaderComponent","to","icon","faBell","fontSize","length","weatherRedcuer","action","locationReducer","favoritesReducer","filter","Favoriteitem","isLoadingReducer","themeReducer","tempUnitReducer","combineReducers","isLoading","theme","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","LoaderComponent","class","App","navigator","geolocation","getCurrentPosition","lat","coords","latitude","lon","longitude","err","favoriteLocalStorage","JSON","stringify","localStorage","setItem","saveFavorites","getState","Object","keys","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.83e2e7a0.chunk.js","sourcesContent":["export const GET_CURRENT_CITY=\"GET_CURRENT_CITY\"\r\nexport const CURRENT_CITY_WEEK_WEATHER=\"CURRENT_CITY_WEEK_WEATHER\"\r\nexport const SET_LOCATION=\"SET_LOCATION\"\r\nexport const ADD_FAVORITE=\"ADD_FAVORITE\"\r\nexport const DELETE_FAVORITE=\"DELETE_FAVORITE\"\r\nexport const ADD_ERROR=\"ADD_ERROR\"\r\nexport const DELETE_ERROR=\"DELETE_ERROR\"\r\nexport const SET_LOADING= \"SET_LOADING\"\r\nexport const SET_THEME=\"SET_THEME\"\r\nexport const CONVERT_TEMP=\"CONVERT_TEMP\"\r\n","import { SET_LOCATION, GET_CURRENT_CITY, CURRENT_CITY_WEEK_WEATHER, SET_LOADING } from \"./types\";\r\nimport axios from \"axios\";\r\n\r\nconst API_KEY = 'wOoT0blOADflg09p2sBk1Z28WuUnFalS'\r\nconst autoComplelteURL = 'https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey='\r\nconst weeklyWeatherURL = \"https://dataservice.accuweather.com/forecasts/v1/daily/5day/\"\r\nconst currentURL = 'https://dataservice.accuweather.com/currentconditions/v1/'\r\nconst geoURL = 'https://dataservice.accuweather.com/locations/v1/cities/geoposition/search?'\r\n\r\nexport const GetdeafultCity = (city) => async dispatch => {\r\n    const response = await axios.get(`${autoComplelteURL}${API_KEY}&q=${city}`)\r\n    await dispatch({ type: SET_LOCATION, payload: { city: response?.data[0].LocalizedName, cityKey: response.data[0].Key } })\r\n    let cityKey = response.data[0].Key;\r\n    await dispatch(getLocationWeather(cityKey))\r\n}\r\n\r\nexport const getCityByGeo = (lat, lon) => async dispatch => {\r\n    const response = await axios.get(`${geoURL}apikey=${API_KEY}&q=${lat},${lon}`)\r\n    await dispatch({ type: SET_LOCATION, payload: { city: response.data.LocalizedName, cityKey: response.data.Key } })\r\n    let cityKey = response.data.Key\r\n    await dispatch(getLocationWeather(cityKey))\r\n\r\n}\r\n\r\nexport const getLocationWeather = cityKey => async dispatch => {\r\n    await dispatch(currentWeather(cityKey))\r\n    await dispatch(getWeekCurrentWeather(cityKey))\r\n    await dispatch({type: SET_LOADING})\r\n}\r\n\r\nexport const currentWeather = cityKey => async dispatch => {\r\n    const response = await axios.get(`${currentURL}${cityKey}?apikey=${API_KEY}&getphotos=true`)\r\n    await dispatch({ type: GET_CURRENT_CITY, payload: response.data[0] })\r\n\r\n}\r\n\r\n\r\nexport const getWeekCurrentWeather = cityKey => async dispatch => {\r\n    const response = await axios.get(`${weeklyWeatherURL}${cityKey}?apikey=${API_KEY}`)\r\n    await dispatch({ type: CURRENT_CITY_WEEK_WEATHER, payload: response.data.DailyForecasts })\r\n\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { tempConverter } from '../../../utils/tempConverter';\r\nimport \"../../../css/weather-icons.min.css\";\r\nimport '../../../css/weather-icons.css'\r\n\r\n\r\n\r\nvar moment = require('moment');\r\n\r\nconst DayCardComponent = ({ day, index }) => {\r\n\r\n    const currentWeather = useSelector((state) => state.weather.current)\r\n    const temp = useSelector((state) => state.temp)\r\n\r\n    const isDayTime = currentWeather.IsDayTime ? 'Day' : 'Night'\r\n    return (\r\n        <>\r\n\r\n            <div key={index} className=\"weather-forecast__item\">\r\n                <p className=\"weather-forecast__day\">{moment(day.Date).format('ddd')}</p>\r\n                <p className=\"weather-forecast__icon\"><i className={`wi icon-accu${day.Day.Icon} `}></i></p>\r\n                <p className=\"weather-forecast__temp\">{temp ? `${Math.round(day.Temperature.Minimum.Value)} °F` : `${tempConverter(Math.round(day.Temperature.Minimum.Value))} °C`}</p>\r\n                <p className=\"weather__forecast__text\">{day[isDayTime].IconPhrase}</p>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DayCardComponent\r\n","export const tempConverter = (fahr) => {\r\n    let cels = Math.round((fahr - 32.0) * (5.0 / 9.0));\r\n    return cels\r\n}","import { ADD_FAVORITE, DELETE_FAVORITE } from \"./types\"\r\n\r\nexport const addFavorite = (id, name) => {\r\n    return {\r\n        type: ADD_FAVORITE,\r\n        payload: {\r\n            id: id,\r\n            name: name\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteFavorite = id => {\r\n    return {\r\n        type: DELETE_FAVORITE,\r\n        payload: id\r\n    }\r\n}","import React from 'react'\r\nimport DayCardComponent from '../Card/DayCardComponent'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { addFavorite, deleteFavorite } from '../../../Redux/actions/favoritesAction';\r\nimport Button from '@mui/material/Button';\r\n\r\n\r\nconst WeekContainer = () => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const weekWeather = useSelector((state) => state.weather.weekly)\r\n    const currentLocation = useSelector((state) => state.location)\r\n    const currentWeather = useSelector((state) => state.weather.current)\r\n    const favorites = useSelector((state) => state.favorites)\r\n    const temp = useSelector((state) => state.temp)\r\n\r\n\r\n    const checkIfFavorite = () => {\r\n        if (favorites.some(e => e.id === currentLocation.cityKey)) {\r\n            return true\r\n        }\r\n        else {\r\n            return false\r\n        }\r\n    }\r\n    return (\r\n\r\n        <>\r\n            {\r\n                currentWeather.Temperature ?\r\n                    <div className=\"weather-forecast container\">\r\n                        <div className=\"weather-current__today\">\r\n                            <h2 className=\"weather-current__title\">{currentLocation.city}</h2>\r\n                            <div className=\"weather-forecast__current\">\r\n                                <p className=\"weather-forecast__day\">Today</p>\r\n                                <p className=\"weather-forecast__text\">{currentWeather.WeatherText}</p>\r\n                                <p className=\"weather-forecast__temp\">{temp ? `${currentWeather?.Temperature?.Imperial?.Value} °F` : `${currentWeather?.Temperature?.Metric?.Value} °C`}</p>\r\n                            </div>\r\n                            {checkIfFavorite() ? <button className=\"weather-current__btn mainCard\"  variant=\"contained\" onClick={() => dispatch(deleteFavorite(currentLocation.cityKey))}>Unsubscribe</button>\r\n                                : <button className=\"weather-current__btn mainCard\" variant=\"contained\" onClick={() => dispatch(addFavorite(currentLocation.cityKey, currentLocation.city))}>Subscribe</button>\r\n                            }\r\n                        </div>\r\n                        <div className=\"weather-forecast__list\">\r\n\r\n                            {weekWeather.map((day, index) => {\r\n                                return <DayCardComponent day={day} index={index} />\r\n                            })}\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    :\r\n                    \"\"\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default WeekContainer\r\n","import React, { useState, useCallback } from 'react'\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { GetdeafultCity } from '../../../Redux/actions/weatherActions';\r\nimport Alert from '@mui/material/Alert';\r\nimport debounce from 'lodash.debounce'\r\n\r\n\r\nconst AutocompleteComponent = (e) => {\r\n    const currentWeather = useSelector((state) => state.weather.current)\r\n    const heroImage = `linear-gradient(rgba(245, 177, 83, 0.75), #fff), url(${currentWeather.Photos[0].LandscapeLink.replace(\"_L_L\", \"_L_XXL\")})`\r\n\r\n    const dispatch = useDispatch()\r\n    const autoCompleteURL = 'https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey='\r\n    const api_key = 'wOoT0blOADflg09p2sBk1Z28WuUnFalS'\r\n    const [suggestions, setSuggestions] = useState([])\r\n    const [erros, setError] = useState(false)\r\n    const [connectionError, setConnectionError] = useState(false)\r\n\r\n    const serachCity = (e) => {\r\n        let value = e.target.value\r\n        let notEnglish = /[^A-Za-z]/ig\r\n\r\n        if (!notEnglish.test(value)) {\r\n            setError(false)\r\n            fetch(`${autoCompleteURL}${api_key}&q=${value}`)\r\n                .then((res) => res.json())\r\n                .then((response) => {\r\n                    const isError = !!response.Message\r\n                    if (isError) {\r\n                        setConnectionError(true)\r\n                        setSuggestions([])\r\n                    } else {\r\n                        setConnectionError(false)\r\n                        setSuggestions(response)\r\n                    }\r\n                })\r\n        }\r\n        else if (value === \"\") {\r\n            setError(false)\r\n        }\r\n        else {\r\n            setError(true)\r\n        }\r\n\r\n    }\r\n\r\n    const debounceSearch = useCallback(debounce(serachCity, 500\r\n        , []))\r\n\r\n    return (\r\n\r\n        <div className=\"autoComplete\" style={{backgroundImage:heroImage }}>\r\n            {erros ? <Alert severity=\"error\">English letters only.</Alert> : \"\"}\r\n            {connectionError ? <Alert severity=\"error\">API ERROR. Try Later</Alert> : \"\"}\r\n\r\n            <Autocomplete\r\n                id=\"free-solo-demo\"\r\n                size=\"medium\"\r\n                color='white'\r\n                sx={{ width: 500 }}\r\n                options={suggestions ? suggestions.map((option) => option.LocalizedName) : \"hi\"}\r\n                onChange={(e, value) => dispatch(GetdeafultCity(value))}\r\n                renderInput={(params) =>\r\n                    <TextField onChange={debounceSearch} {...params} label=\"Search city\" key={params.Key} style={{ background: 'white' }} />}\r\n            />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AutocompleteComponent\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { GetdeafultCity } from '../../../Redux/actions/weatherActions';\r\nimport WeekContainer from '../../Features/WeekContainer/WeekContainer';\r\nimport AutocompleteComponent from '../../Features/Autocomplete/AutocompleteComponent';\r\n\r\n\r\n\r\nconst HomeComponent = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(GetdeafultCity('Tel aviv'))\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className=\"home\"  >\r\n            <AutocompleteComponent/>\r\n            <WeekContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeComponent\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { deleteFavorite } from '../../../Redux/actions/favoritesAction'\r\nimport axios from 'axios'\r\n\r\n\r\nconst FavoritesComponent = () => {\r\n    const dispatch = useDispatch()\r\n    const favorites = useSelector((state) => state.favorites)\r\n    const [favoriteList, setFavoriteList] = useState([])\r\n\r\n    let tempFavoriteList = []\r\n    \r\n   \r\n    useEffect(() => {\r\n        const fetchFavorites = async () => {\r\n            const CURRENT_URL = 'https://dataservice.accuweather.com/currentconditions/v1/'\r\n            const API_KEY = 'wOoT0blOADflg09p2sBk1Z28WuUnFalS'\r\n            for await (const fav of favorites) {\r\n                const data = await axios.get(`${CURRENT_URL}${fav.id}?apikey=${API_KEY}`)\r\n                tempFavoriteList[fav.id] = data.data[0]\r\n            }\r\n            setFavoriteList(tempFavoriteList)\r\n        }\r\n        fetchFavorites()\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Favorites</h1>\r\n            <div className=\"favoritesContainer\">\r\n                {favorites.map((favorite, index) =>\r\n                    <div\r\n                        className=\"favoritesItem\"\r\n                        key={index}>\r\n                        <p>{favorite.name}</p>\r\n                        <p>{favoriteList[favorite.id]?.WeatherText}</p>\r\n                        <p>{favoriteList[favorite.id]?.Temperature.Metric.Value}</p>\r\n                        <button\r\n                            onClick={() => dispatch(deleteFavorite(favorite.id))}>\r\n                            Remove Favorite\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavoritesComponent\r\n","import process from \"process\";\r\n\r\nconst development = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\r\n\r\nexport default function isDev()\r\n{\r\n    return development;\r\n}","import React from 'react'\r\nimport {\r\n    Route,\r\n    Switch\r\n} from \"react-router-dom\";\r\nimport HomeComponent from '../Components/Pages/Home/HomeComponent';\r\nimport FavoritesComponent from '../Components/Pages/Favorites/FavoritesComponent';\r\nimport isDev from '../utils/environment'\r\n\r\n\r\nconst Routing = () => {\r\n    return (\r\n\r\n        <Switch>\r\n            {isDev() ? <Route path=\"/itzhack-08-11-2021\" exact component={HomeComponent} /> : <Route path=\"https://itzhackb.github.io/itzhack-08-11-2021/#/\" exact component={HomeComponent} />}\r\n            {isDev() ? <Route path=\"/itzhack-08-11-2021/favorites\" component={FavoritesComponent} /> : <Route path=\"https://itzhackb.github.io/itzhack-08-11-2021/#/favorites\" component={FavoritesComponent} />}\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Routing\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBell } from '@fortawesome/free-solid-svg-icons'\r\nimport isDev from '../../../utils/environment'\r\nimport { tempUnitAction } from '../../../Redux/actions/tempUnitAction'\r\n\r\nconst HeaderComponent = () => {\r\n    const favorites = useSelector((state) => state.favorites)\r\n    const temp = useSelector((state) => state.temp)\r\n\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"container\">\r\n                <nav className=\"header-nav\">\r\n\r\n                    {isDev() ? <Link to=\"/itzhack-08-11-2021\">\r\n                        <h1 className=\"header__logo\" style={{ color: \"white\" }}>Weather App</h1>\r\n                    </Link>\r\n                        :\r\n                        <Link to=\"https://itzhackb.github.io/itzhack-08-11-2021/#/\">\r\n                            <h1 className=\"header__logo\" style={{ color: \"white\" }}>Weather App</h1>\r\n                        </Link>\r\n                    }\r\n\r\n                    <ul className=\"header__list\">\r\n                        <li>\r\n                            {isDev() ? <Link to=\"/itzhack-08-11-2021/favorites\">\r\n                                <FontAwesomeIcon icon={faBell} style={{ color: \"white\", fontSize: '1em' }} />\r\n                                <div className=\"header__favorite-num\">\r\n                                    {favorites.length}</div>\r\n                            </Link>\r\n                                :\r\n                                <Link to=\"https://itzhackb.github.io/itzhack-08-11-2021/#/favorites\">\r\n                                    <FontAwesomeIcon icon={faBell} style={{ color: \"red\", fontSize: '1em' }} />\r\n                                    <div className=\"header__favorite-num\">\r\n                                        {favorites.length}</div>\r\n                                </Link>\r\n                            }\r\n                        </li>\r\n\r\n                        <li>\r\n                            <button\r\n                            onClick={() => dispatch(tempUnitAction())}><div className=\"header__unit-icon\">{temp ? '\\xB0C' : '\\xB0F'}</div></button>\r\n                        </li>\r\n\r\n                    </ul>\r\n\r\n                </nav>\r\n            </div>\r\n        </header>\r\n\r\n    )\r\n}\r\n\r\nexport default HeaderComponent\r\n","import { CONVERT_TEMP } from \"./types\"\r\n\r\nexport const tempUnitAction = () => {\r\n    return {\r\n        type: CONVERT_TEMP\r\n    }\r\n}","import { GET_CURRENT_CITY, CURRENT_CITY_WEEK_WEATHER } from \"../actions/types\";\r\n\r\nfunction weatherRedcuer(weather = { current: {}, weekly: [] }, action) {\r\n    switch (action.type) {\r\n        case GET_CURRENT_CITY:\r\n            return {\r\n                ...weather, current: action.payload\r\n            }\r\n        case CURRENT_CITY_WEEK_WEATHER:\r\n            return {\r\n                ...weather, \r\n                weekly: action.payload\r\n            }\r\n        default:\r\n            return weather;\r\n    }\r\n}\r\n\r\nexport default weatherRedcuer;","import { SET_LOCATION } from \"../actions/types\"\r\n\r\nconst locationReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case SET_LOCATION:\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default locationReducer","import { ADD_FAVORITE, DELETE_FAVORITE } from \"../actions/types\";\r\n\r\nconst favoritesReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case ADD_FAVORITE:\r\n            return  [...state, action.payload]\r\n        case DELETE_FAVORITE:\r\n            return state.filter((Favoriteitem) => Favoriteitem.id !== action.payload)\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default favoritesReducer","const isLoadingReducer = (state = true, action) => {\r\n    switch (action.type) {\r\n        case 'SET_LOADING':\r\n            return false\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default isLoadingReducer\r\n","import { SET_THEME } from \"../actions/types\"\r\n\r\nconst themeReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case SET_THEME:\r\n            return !state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default themeReducer","import { CONVERT_TEMP } from \"../actions/types\"\r\n\r\nconst tempUnitReducer = (state = true, action) => {\r\n    switch (action.type) {\r\n        case CONVERT_TEMP:\r\n            return !state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default tempUnitReducer","import { combineReducers } from \"redux\";\r\nimport weatherRedcuer from \"./weatherRedcuer\";\r\nimport locationReducer from \"./locationReducer\";\r\nimport favoritesReducer from \"./favoritesReducer\";\r\nimport isLoadingReducer from \"./isLoadingReducer\";\r\nimport themeReducer from \"./themeReducer\";\r\nimport tempUnitReducer from \"./tempUnitReducer\";\r\n\r\nexport default combineReducers({\r\n    weather: weatherRedcuer,\r\n    location: locationReducer,\r\n    favorites: favoritesReducer,\r\n    isLoading:isLoadingReducer,\r\n    theme:themeReducer,\r\n    temp:tempUnitReducer\r\n})","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from './reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\n\r\nconst store = createStore(rootReducer, initialState, compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n))\r\n\r\nexport default store;","import React from 'react'\r\nimport './Loader.css'\r\n\r\nconst LoaderComponent = () => {\r\n    return (\r\n        <div class=\"wrapper\">\r\n            <div class=\"sun\"></div>\r\n            <div class=\"cloud\">\r\n                <div class=\"cloud1\">\r\n                    <ul>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"cloud1 c_shadow\">\r\n                    <ul>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"cloud_s\">\r\n                <div class=\"cloud1\">\r\n                    <ul>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"cloud1 c_shadow\">\r\n                    <ul>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"cloud_vs\">\r\n                <div class=\"cloud1\">\r\n                    <ul>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"cloud1 c_shadow\">\r\n                    <ul>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div class=\"haze\"></div>\r\n            <div class=\"haze_stripe\"></div>\r\n            <div class=\"haze_stripe\"></div>\r\n            <div class=\"haze_stripe\"></div>\r\n            <div class=\"thunder\"></div>\r\n            <div class=\"rain\">\r\n                <ul>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                </ul>\r\n            </div>\r\n            <div class=\"sleet\">\r\n                <ul>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                </ul>\r\n            </div>\r\n            <div class=\"text\">\r\n                <ul>\r\n                    <li>Mostly Sunny</li>\r\n                    <li>Partly Sunny</li>\r\n                    <li>Partly Cloudy</li>\r\n                    <li>Mostly Cloudy</li>\r\n                    <li>Cloudy</li>\r\n                    <li>Hazy</li>\r\n                    <li>Thunderstorm</li>\r\n                    <li>Rain</li>\r\n                    <li>Sleet</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoaderComponent\r\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport Routing from './Routing/Routing';\nimport HeaderComponent from './Components/Features/Header/HeaderComponent';\nimport { useDispatch, useSelector } from 'react-redux'\nimport store from './Redux/store'\nimport { GetdeafultCity } from '../src/Redux/actions/weatherActions'\nimport { saveFavorites } from '../src/utils/favoriteLocalStorage'\nimport { getCityByGeo } from '../src/Redux/actions/weatherActions'\nimport LoaderComponent from './Components/Features/Loader/LoaderComponent';\n\n\n\nfunction App() {\n  const dispatch = useDispatch()\n  const isLoading = useSelector((state) => state.isLoading)\n  const theme = useSelector((state) => state.theme)\n  const currentWeather = useSelector((state) => state.weather.current)\n\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(\n      location => dispatch(getCityByGeo(location.coords.latitude, location.coords.longitude)),\n      err => {\n        dispatch(GetdeafultCity('Tel Aviv'))\n      }\n    )\n    saveFavorites(store.getState.favorites)\n  }, [dispatch])\n\n\n  return (\n    <div className={theme ? \"App\" : \"dark\"}>\n      {isLoading ? <LoaderComponent /> : \"\"}\n      {\n        Object.keys(currentWeather).length === 0 ? \"\"\n          :\n          <>\n            <HeaderComponent />\n            <Routing />\n          </>\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n","\r\nexport const loadFavorites = () => {\r\n    \r\n    try {\r\n        const favoriteLocalStorage = localStorage.getItem('favorites')\r\n        if (favoriteLocalStorage === null) {\r\n            return []\r\n        }\r\n        return JSON.parse(favoriteLocalStorage)\r\n    } catch (err) {\r\n        return undefined\r\n    }\r\n}\r\n\r\nexport const saveFavorites = (state) => {\r\n    \r\n    try {\r\n        const favoriteLocalStorage = JSON.stringify(state)\r\n        localStorage.setItem('favorites', favoriteLocalStorage)\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './Redux/store'\nimport { BrowserRouter as Router } from \"react-router-dom\"\n\n\n\n\n\n\nReactDOM.render(\n  < Provider store={store} >\n      <Router>\n        <App />\n      </Router>\n  </Provider >,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}